extends layout

block content
    script(type="application/lua").
        print("hello bot!")
    script.
        var bet_total_stats = {
            id: "bet_total_stats",
            view: "property",
            //- height: 210,
            //width: 0,
            elements: [
                {label: "TOTAL STATS", type: "label"},
                {label: "BALANCE", id: "bet_total_stats_balance", value:"0", type: "text"},
                {label: "WIN", type: "text", id: "bet_total_stats_win", value:"0"},
                {label: "LOSS", type: "text", id: "bet_total_stats_loss", value:"0"},
                {label: "BET", type: "text", id: "bet_total_stats_bet", value:"0"},
                {label: "PROFIT", type: "text", id: "bet_total_stats_profit", value:"0"},
                {label: "WAGERED", type: "text", id: "bet_total_stats_wagered", value:"0"},
            ]
        };


            var bet_current_stats = {
                id: "bet_current_stats",
                view: "property",
                //- height: 210,
                //width: 0,
                elements: [
                    {label: "CURRENT STATS 1", type: "label"},
                    {label: "BALANCE", type: "text", id: "bet_current_stats_balance", value:"0"},
                    {label: "WIN", type: "text", id: "bet_current_stats_win", value:"0"},
                    {label: "LOSS", type: "text", id: "bet_current_stats_loss", value:"0"},
                    {label: "BET", type: "text", id: "bet_current_stats_bet", value:"0"},
                    {label: "PROFIT", type: "text", id: "bet_current_stats_profit", value:"0"},
                    {label: "WAGERED", type: "text", id: "bet_current_stats_wagered", value:"0"},
                ]
            };

            var bet_current_stats2 = {
                id: "bet_current_stats2",
                view: "property",
                //- height: 210,
                //width: 0,
                elements: [
                    {label: "CURRENT STATS 2", type: "label"},
                    {label: "currentstreak", type: "text", id: "bet_current_stats_current_streak", value:"0", labelWidth: 120},
                    {label: "maxwinstreak", type: "text", id: "bet_current_stats_max_win_streak", value:"0", labelWidth: 120},
                    {label: "maxlosstreak", type: "text", id: "bet_current_stats_max_loss_streak", value:"0", labelWidth: 120},
                    {label: "MWSAmount", type: "text", id: "bet_current_stats_max_win_streak_amount", value:"0", labelWidth: 120},
                    {label: "MLSAmount", type: "text", id: "bet_current_stats_max_loss_streak_amount", value:"0", labelWidth: 120},
                    {label: "MSBAmount", type: "text", id: "bet_current_stats_max_bet_amount", value:"0", labelWidth: 120},
                ]
            };

            var bet_currency_selection = {
                id: "bet_currency_selection",
                options: [
                    {id:1,value:"BTC"},
                    {id:2,value:"Doge"},
                    {id:3,value:"LTC"},
                    {id:4,value:"ETH"}
                ],
                view: "richselect",
                left: 70,
                top: 70,
                //- width: 0,
                value: 1,
                label: "CURRENCY",
                labelWidth: 100,
                placeholder: "BTC",
                name: "currency"
            };
            var bet_house_edge_selection = {
                id: "bet_house_edge_selection",
                options: [
                    {id:0.001,value:"0.1%"},
                    {id:0.002,value:"0.2%"},
                    {id:0.005,value:"0.5%"},
                    {id:0.01,value:"1%"},
                    {id:0.015,value:"1.5%"},
                    {id:0.02,value:"2%"},
                ],
                view: "richselect",
                left: 70,
                top: 70,
                //- width: 0,
                value: 0.01,
                label: "HOUSE EDGE",
                labelWidth: 100,
                placeholder: "0.1%",
                name: "house_edge",
                hidden: true,
            };

            var reset_session_button = {
                id: "reset_session_button",
                view: "button",
                label: "RESET SESSION",
            // height: 0,
                //- width: 0
            };

            var switch_site_button = {
                id: "switch_site_button",
                view: "button",
                type: "danger",
                label: "LOGOUT/SWITCH SITE",
                //- width: 400
            };

            var ads_label = {
                view:"label",
                label:"ADVERTISE",
                height:0,
                width:80,
            };

            var ads_iframe = {
                    view:"iframe", 
                    src:"//ad.a-ads.com/1102518?size=320x50"
            };

            var bot_iframe = {
                    view:"iframe", 
                    src:"https://mydicebot.com"
            };

            var faq_iframe = {
                    view:"iframe", 
                    src:"//mydicebot.com/faq"
            };

            var ads = {
                id: "ads",
                cols: [
                    //- ads_label,
                    ads_iframe
                ]
            };

            var bet_chart = {
                id: "bet_chart",
                view: "chart",
                //- height: 0,
                //- width: 0,
                type: "spline",
                value: "#yValue#",
                cellWidth: 10,
                dynamic: true,
                label: function (obj) {
                    return parseInt(obj.yValue, 10);
                },
                item: {
                    borderColor: "#1293f8",
                    color: "#ffffff"
                },
                line: {
                    color: "#1293f8",
                    width: 3
                },
                xAxis: {
                    template: "#xValue#"
                },
                yAxis: {},
                series: [
                    {
                        value: "#yValue#",
                        item: {
                            borderColor: "#1293f8",
                            color: "#ffffff"
                        },
                        line: {
                            color: "#1293f8",
                            width: 2
                        },
                        tooltip: {
                            template: "#yValue#"
                        }
                    }
                ]
            };

            var bet_datatable;

            if(!webix.env.touch) {
                bet_datatable = {
                    id: "bet_datatable",
                    view: "datatable",
                    columns: [
                        {id: "bet_datatable_id", header: ["ID",{content:"textFilter"}], fillspace:true},
                        {id: "bet_datatable_bet_chance", header: ["GAME",{content:"textFilter"}], fillspace:true},
                        {id: "bet_datatable_actual_chance", header: ["ROLL",{content:"textFilter"}], fillspace:true,sort:"int"},
                        {id: "bet_datatable_amount", header: ["AMOUNT",{content:"textFilter"}], fillspace:true,sort:"int"},
                        {id: "bet_datatable_payout", header: ["PAYOUT",{content:"textFilter"}], fillspace:true,sort:"int"},
                        {id: "bet_datatable_profit", header: ["PROFIT",{content:"textFilter"}], fillspace:true,sort:"int"}
                    ]
                };
            } else {
                bet_datatable = {
                    id: "bet_datatable",
                    view: "datatable",
                    columns: [
                        {id: "bet_datatable_id", header: ["ID"], fillspace:true},
                        {id: "bet_datatable_bet_chance", header: ["GAME"], fillspace:true},
                        {id: "bet_datatable_actual_chance", header: ["ROLL"], fillspace:true},
                        {id: "bet_datatable_amount", header: ["AMOUNT"], fillspace:true},
                        {id: "bet_datatable_payout", header: ["PAYOUT"], fillspace:true},
                        {id: "bet_datatable_profit", header: ["PROFIT",], fillspace:true}
                    ]
                };
            }
            

            var bet_config_tabview = {
                id: "bet_config_tabview",
                view: "tabview",
                tabbar:{
                    optionWidth:80
                },
                //- minHeight: 500,
                width: 400,
                cells: [
                    <!--{-->
                        <!--header: "BOT",-->
                        <!--body: {-->
                            <!--id: "site_form",-->
                            <!--view: "form",-->
                            <!--padding: 4,-->
                            <!--//- minHeight: 500,-->
                            <!--width: 0,-->
                            <!--elements: [-->
                                <!--bot_iframe-->
                            <!--]-->
                        <!--}-->
                    <!--},-->
                    {
                        header: "MANUAL",
                        body: {
                            id: "manual_bet_form",
                            view: "form",
                            paddingY: 4,
                            margin: 0,
                            minHeight: 500,
                            height: 0,
                            width: 0,
                            elements: [
                                //- {
                                //-     id: "manual_bet_seed_info", 
                                //-     view: "text", 
                                //-     value: "",
                                //-     label: "SEED"
                                //- },
                                //- {
                                //-     id: "manual_bet_reset_seed_button",
                                //-     view: "button",
                                //-     type: "danger",
                                //-     label: "RESET SEED",
                                //- },
                                {
                                    id: "manual_bet_amount",
                                    view: "text",
                                    label: "BET AMOUNT",
                                    value: "0.00000001",
                                    labelWidth: 200,
                                    name: "manual_bet_amount"
                                },
                                {
                                    cols: [
                                        {
                                            id: "manual_bet_amount_min_button",
                                            view: "button",
                                            label: "MIN",
                                        },
                                        {
                                            id: "manual_bet_amount_max_button",
                                            view: "button",
                                            label: "MAX",
                                        },
                                        {
                                            id: "manual_bet_amount_half_button",
                                            view: "button",
                                            label: "1/2",
                                        },
                                        {
                                            id: "manual_bet_amount_double_button",
                                            view: "button",
                                            label: "2x",
                                        },
                                    ]
                                },
                                {
                                    id: "manual_bet_chance",
                                    view: "text",
                                    label: "BET CHANCE",
                                    value: "49.50",
                                    labelWidth: 200,
                                    name: "manual_bet_chance"
                                },
                                {
                                    id: "manual_bet_low_button",
                                    view: "button",
                                    type: "form",
                                    label: "BET LOW",
                                },
                                {
                                    id: "manual_bet_high_button",
                                    view: "button",
                                    type: "form",
                                    label: "BET HIGH",
                                }
                            ]
                        }
                    },
                    {
                        header: "AUTO",
                        body: {
                            rows: [
                            {
                            id: "auto_bet_form",
                            view: "form",
                            paddingY: 4,
                            margin: 0,
                            height: 0,
                            width: 0,
                            scroll:true,
                            elements: [
                                {
                                    id: "auto_bet_number_of_bets",
                                    view: "text",
                                    label: "NUM OF BETS(0:UNLIMITED)",
                                    labelWidth: 240,
                                    value: "0"
                                },
                                {
                                    id: "auto_bet_start_low_high",
                                    view: "richselect",
                                    label: "START(LOW/HIGH)",
                                    labelWidth: 240,
                                    value: "LOW",
                                    options: ["LOW", "HIGH"]
                                },
                                {
                                    id: "auto_bet_base_amount",
                                    view: "text",
                                    label: "BET BASE AMOUNT",
                                    value: "0.00000001",
                                    labelWidth: 240,
                                    name: "auto_bet_base_amount"
                                },
                                {
                                    cols:[
                                        {
                                            id: "auto_bet_amount_radio_on_loss",
                                            label: "ON LOSS",
                                            view: "radio",
                                            value: "RESET TO BASE AMOUNT",
                                            options: [
                                                {value: "RESET TO BASE AMOUNT"}, 
                                                {value: "MULTIPLIER", newline:true}
                                            ]
                                        },
                                        {
                                            rows:[
                                                {view: "label"},
                                                {
                                                    id: "auto_bet_amount_radio_on_loss_multiplier",
                                                    view: "text",
                                                    width: 60,
                                                    value: "2"
                                                }

                                            ]
                                        }
                                    ]

                                },
                                {
                                    cols:[
                                        {
                                            id: "auto_bet_amount_radio_on_win",
                                            label: "ON WIN",
                                            view: "radio",
                                            value: "RESET TO BASE AMOUNT",
                                            options: [
                                                {value:"RESET TO BASE AMOUNT"}, 
                                                {value:"MULTIPLIER", newline:true}
                                            ]
                                        },
                                        {
                                            rows: [
                                                {view: "label"},
                                                {
                                                    id: "auto_bet_amount_radio_on_win_multiplier",
                                                    view: "text",
                                                    width: 60,
                                                    value: "2"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    id: "auto_bet_base_chance",
                                    view: "text",
                                    label: "BET BASE CHANCE",
                                    value: "49.50",
                                    labelWidth: 240,
                                    name: "auto_bet_base_chance"
                                },
                                {
                                    cols:[
                                        {
                                            id: "auto_bet_stop_on_roll",
                                            label: "STOP ON ROLL",
                                            view: "label",
                                            labelWidth: 150,
                                            name: "auto_bet_stop_on_roll"
                                        },
                                        {
                                            id: "auto_bet_roll_min",
                                            label: "MIN",
                                            view: "text",
                                            labelWidth: 40,
                                            width: 100,
                                            value: "0.00",
                                            name: "auto_bet_roll_min"
                                        },
                                        {
                                            id: "auto_bet_roll_max",
                                            label: " -- MAX",
                                            view: "text",
                                            labelWidth: 60,
                                            width: 120,
                                            value: "0.00",
                                            name: "auto_bet_roll_max"
                                        }
                                    ]
                                },
                                {
                                    id: "auto_bet_stop_on_profit",
                                    view: "text",
                                    label: "STOP ON PROFIT(0:NON-STOP)",
                                    labelWidth: 230,
                                    value: "0.00000000",
                                    name: "auto_bet_stop_on_profit"
                                },
                                {
                                    id: "auto_bet_stop_on_win",
                                    view: "text",
                                    label: "STOP ON WIN(0:NON-STOP)",
                                    labelWidth: 230,
                                    value: "0",
                                    name: "auto_bet_stop_on_win"
                                },
                                {
                                    id: "auto_bet_stop_on_loss",
                                    view: "text",
                                    label: "STOP ON LOSS(0:NON-STOP)",
                                    labelWidth: 230,
                                    value: "0",
                                    name: "auto_bet_stop_on_loss"
                                },
                            ]
                        },
                        {
                            id: "auto_bet_form_start_stop_buttons",
                            view: "form",
                            paddingY: 1,
                            margin: 0,
                            //- height: 0,
                            minHeight: 70,
                            width: 0,
                            elements: [
                                {
                                    id: "auto_bet_start_stop_button",
                                    view: "button",
                                    type: "form",
                                    label: "START",
                                    value: "START"
                                },
                                {
                                    id: "auto_bet_stop_on_next_win_button",
                                    view: "button",
                                    type: "form",
                                    label: "STOP ON NEXT WIN"
                                },
                                {
                                    id: "auto_bet_stop_on_next_loss_button",
                                    view: "button",
                                    type: "form",
                                    label: "STOP ON NEXT LOSS"
                                },
                            ]}
                        ]} 
                    },
                    {
                        header: "SCRIPT",
                        body: {
                            id: "script_bet_form",
                            view: "form",
                            paddingY: 4,
                            margin: 0,
                            height: 0,
                            width: 0,
                            elements: [
                                {cols: [
                                {
                                    id: "script_bet_menu",
                                    view:"menu",
                                    width: 80,
                                    data:[
                                        { id:"1",value:"MENU", submenu:[
                                            "Import",
                                            "Save", 
                                            "Save As..",
                                            "Delete"
                                        ]}
                                    ],
                                    openAction:"click",
                                    on:{
                                        onMenuItemClick:function(id){
                                            if(this.getMenuItem(id).value == 'Save') {
                                                saveScript($$("script_bet_strategy_list").getValue());
                                            } else if (this.getMenuItem(id).value == 'Import') {
                                                $$("uploadScript").fileDialog();
                                            } else if (this.getMenuItem(id).value == 'Save As..') {
                                                $$('script_code').show();
                                            } else if (this.getMenuItem(id).value == 'Delete') {
                                                delScript($$("script_bet_strategy_list").getValue());
                                            }
                                        }
                                    },
                                    type:{
                                        subsign:true
                                    }
                                },
                                {
                                    options: [
                                    ],
                                    view: "richselect",
                                    //- left: 70,
                                    //- top: 70,
                                    //- width: 280,
                                    value: "Untitled.lua",
                                    //- label: "STRATEGY",
                                    //- labelWidth: 100,
                                    placeholder: "Untitled.lua",
                                    id: "script_bet_strategy_list",
                                    name: "script_bet_strategy_list"
                                },
                                ]},
                                
                                
                                {
                                    id: "script_bet_tabview",
                                    view: "tabview",
                                    //- minHeight: 240,
                                    cells: [
                                        //- {
                                        //-     header: "STRATEGY",
                                        //-     body: {
                                        //-         id: "script_bet_strategy_board",
                                        //-         view: "list",
                                        //-     }
                                        //- },
                                        {
                                            header: "CODE",
                                            body: {
                                                id: "script_bet_coding_board",
                                                view: "codemirror-editor",
                                                mode: "lua",
                                            }
                                        },
                                        {
                                            header: "LOG",
                                            body: {
                                            rows:[
                                                {
                                                    view: "pager",
                                                    id:"myPager",
                                                    animate: { direction:"top" },
                                                    group: 10,
                                                    size: 15
                                                },
                                                {
                                                     view:"list",
                                                     pager: "myPager",
                                                     template:"#title#",
                                                     id: "script_bet_log_board",
                                                }
                                            ]
                                            }
                                            //body: {
                                            //    id: "script_bet_log_board",
                                            //    //view: "textarea",
                                            //    view: "label",
                                            //}
                                        },
                                    ]
                                },
                                {
                                    id: "script_bet_form_start_stop_buttons",
                                    view: "form",
                                    margin: 0,
                                    padding: 0,
                                    borderless: true,
                                    //- height: 0,
                                    minHeight: 70,
                                    width: 0,
                                    elements: [
                                        {
                                            id: "script_bet_start_stop_button",
                                            view: "button",
                                            type: "form",
                                            label: "START",
                                            value: "START"
                                        },
                                        {
                                            id: "script_bet_stop_on_next_win_button",
                                            view: "button",
                                            type: "form",
                                            label: "STOP ON NEXT WIN"
                                        },
                                        {
                                            id: "script_bet_stop_on_next_loss_button",
                                            view: "button",
                                            type: "form",
                                            label: "STOP ON NEXT LOSS"
                                        },
                                ]}
                            ]
                        }
                    }
                ]
            };
            webix.ui({
                  id:"uploadScript",
                  view:"uploader",
                  upload:"upload",
                  on:{
                    onBeforeFileAdd:function(item){
                      var type = item.type.toLowerCase();
                      if (type != "lua"){
                        webix.message("Only Lua are supported");
                        return false;
                      }
                    },
                    onFileUpload:function(item){
                        loadScript(item.name);
                    },
                    onFileUploadError:function(item){
                      webix.alert("Error during file upload");
                    }
                  },
                  apiOnly:true
            });
            webix.ui({
                id:"script_code",
                view:"window",
                height:140,
                width:350,
                head:"Save Script",
                position:"center",
                move:true,
                body:{
                   view:"toolbar", 
                   rows:[
                       {view:"text", name:"script_code_name", id:"script_code_name", label:"File Name", value:"Untitled.lua"},
                       {
                           cols:[
                                { view:"button", label: 'Cancel', click:"$$('script_code').hide();"},
                                { view:"button", label: 'Save', click:"saveScript($$('script_code_name').getValue());"}
                            ]
                       }
                   ]
                }
            });

            var resizer = {id:"info_resizer", view:"resizer"};

            var misc_items = {
                id: "misc_items_form",
                view: "form",
                paddingY: 0,
                margin: 0,
                height: 210,
                width: 400,
                elements: [
                    bet_currency_selection, 
                    bet_house_edge_selection, 
                    reset_session_button,
                    switch_site_button,
                    <!--ads,-->
                ]
            };

            var mobile_toolbar = {
                id:"mobile_toolbar",
                view:"toolbar",
                width: 100,
                padding: 0,
                margin: -5,
                rows:[
                    { id: "mobile_toolbar_total", view:"button", value:"TOTAL", },
                    { id: "mobile_toolbar_stats1", view:"button", value:"STATS 1", },
                    { id: "mobile_toolbar_stats2", view:"button", value:"STATS 2", },
                    { id: "mobile_toolbar_chart", view:"button", value:"CHART", },
                    { id: "mobile_toolbar_history", view:"button", value:"HISTORY", },
                    { id: "mobile_toolbar_setting", view:"button", value:"SETTING", }
                ]
            };

            if(!webix.env.touch) {
                webix.ui(
                {
                    id: "bet_layout",
                    rows: [
                        {
                            cols: [
                                bet_total_stats,
                                resizer,
                                bet_current_stats,
                                resizer,
                                bet_current_stats2,
                                resizer,
                                misc_items,
                            ]
                        },
                        {view:"resizer"},
                        {
                            cols: [
                                {rows: [bet_chart, {view:"resizer"}, bet_datatable]},
                                {view:"resizer"},
                                bet_config_tabview
                            ]
                        },
                    ]
                });
            } else {
                webix.ui.fullScreen();
                webix.ui(
                {
                    id: "bet_layout_mobile",
                    rows: [
                        {
                            cols: [
                                mobile_toolbar,
                                bet_total_stats,
                                bet_current_stats,
                                bet_current_stats2,
                                bet_chart,
                                bet_datatable,
                                misc_items, 
                            ]
                        },       
                        bet_config_tabview
                    ]
                });
                webix.Touch.limit(true);
                $$("bet_total_stats").hide();

                $$("bet_current_stats").hide();
                //- $$("bet_current_stats").define("height", 0);

                $$("bet_current_stats2").hide();

                $$("misc_items_form").show();
                $$("misc_items_form").define("height", 0);
                $$("misc_items_form").define("width", 0);
                //- $$("misc_items_form").resize();

                $$("bet_chart").hide();

                $$("bet_datatable").hide();

                $$("bet_config_tabview").define("height", 380);
                $$("bet_config_tabview").define("width", 0);

                $$("auto_bet_stop_on_next_win_button").hide();
                $$("auto_bet_stop_on_next_loss_button").hide();

                $$("script_bet_stop_on_next_win_button").hide();
                $$("script_bet_stop_on_next_loss_button").hide();

                $$("manual_bet_amount").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("manual_bet_amount").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("manual_bet_chance").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("manual_bet_chance").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_number_of_bets").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_number_of_bets").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_base_amount").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_base_amount").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_amount_radio_on_loss_multiplier").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_amount_radio_on_loss_multiplier").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_amount_radio_on_win_multiplier").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_amount_radio_on_win_multiplier").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_base_chance").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_base_chance").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_roll_min").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_roll_min").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_roll_max").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_roll_max").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_stop_on_profit").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_stop_on_profit").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_stop_on_win").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_stop_on_win").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });
                $$("auto_bet_stop_on_loss").attachEvent("onFocus", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                });
                $$("auto_bet_stop_on_loss").attachEvent("onBlur", function(current_view, prev_view){
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                });

                $$("mobile_toolbar_total").attachEvent("onItemClick", function(){
                    $$("bet_total_stats").show();
                    $$("bet_current_stats").hide();
                    $$("bet_current_stats2").hide();
                    $$("bet_chart").hide();
                    $$("bet_datatable").hide();
                    $$("misc_items_form").hide();
                });
                $$("mobile_toolbar_stats1").attachEvent("onItemClick", function(){
                    $$("bet_total_stats").hide();
                    $$("bet_current_stats").show();
                    $$("bet_current_stats2").hide();
                    $$("bet_chart").hide();
                    $$("bet_datatable").hide();
                    $$("misc_items_form").hide();
                });
                $$("mobile_toolbar_stats2").attachEvent("onItemClick", function(){
                    $$("bet_total_stats").hide();
                    $$("bet_current_stats").hide();
                    $$("bet_current_stats2").show();
                    $$("bet_chart").hide();
                    $$("bet_datatable").hide();
                    $$("misc_items_form").hide();
                });
                $$("mobile_toolbar_chart").attachEvent("onItemClick", function(){
                    $$("bet_total_stats").hide();
                    $$("bet_current_stats").hide();
                    $$("bet_current_stats2").hide();
                    $$("bet_chart").show();
                    $$("bet_datatable").hide();
                    $$("misc_items_form").hide();
                });
                $$("mobile_toolbar_history").attachEvent("onItemClick", function(){
                    $$("bet_total_stats").hide();
                    $$("bet_current_stats").hide();
                    $$("bet_current_stats2").hide();
                    $$("bet_chart").hide();
                    $$("bet_datatable").show();
                    $$("bet_datatable").hideColumn("bet_datatable_id");
                    $$("bet_datatable").hideColumn("bet_datatable_payout");
                    $$("misc_items_form").hide();
                });
                $$("mobile_toolbar_setting").attachEvent("onItemClick", function(){
                    $$("bet_total_stats").hide();
                    $$("bet_current_stats").hide();
                    $$("bet_current_stats2").hide();
                    $$("bet_chart").hide();
                    $$("bet_datatable").hide();
                    $$("misc_items_form").show();
                });
            }

            var mobiles = ['bet_total_stats', 'bet_current_stats', 'bet_current_stats2', 'bet_datatable', 'misc_items_form'];

            webix.extend($$("bet_chart"), webix.ProgressBar);
            if(webix.env.touch ) {
                mobiles.forEach(function(element) {
                        console.log(element);
                    webix.extend($$(element), webix.ProgressBar);
                });
                //webix.extend($$("bet_total_stats"), webix.ProgressBar);
                //webix.extend($$("bet_current_stats"), webix.ProgressBar);
                //webix.extend($$("bet_current_stats2"), webix.ProgressBar);
                //webix.extend($$("bet_datatable"), webix.ProgressBar);
                //webix.extend($$("misc_items_form"), webix.ProgressBar);
            }
            let isLoop = false;
            let stopOnWin = false;
            let stopOnLoss = false;
            let minBetAmount = 0.00000001;
            let maxStreakAmount = 0;
            let minStreakAmount = 0;
            $$("script_bet_start_stop_button").attachEvent("onItemClick", function(){
                let status = $$("script_bet_start_stop_button").getValue();
                if(status == 'STOP') {
                    isLoop = false;
                    $$("script_bet_start_stop_button").setValue('START');
                } else {
                    let currencyValue = $$("bet_currency_selection").getValue() -1;
                    fengari.load('bethigh= false')();
                    initScriptBalance(currencyValue, function(){
                        let code = $$("script_bet_coding_board").getValue();
                        try {
                            code = code.replace(/!=/g,"~=");
                            code = code.replace(/!/g,"not ");
                            code = code.replace(/base/g,'basebet');
                            code = code.replace(/basebetbet/g,'basebet');
                            code = code.replace(/([a-zA-Z]*[0-9]*\s*)\+\=(\s*[a-zA-Z]*[0-9]*)/g, '$1=$1+$2 ');
                            code = code.replace(/([a-zA-Z]*[0-9]*\s*)\-\=(\s*[a-zA-Z]*[0-9]*)/g, '$1=$1-$2 ');
                            code = code.replace(/([a-zA-Z]*[0-9]*\s*)\*\=(\s*[a-zA-Z]*[0-9]*)/g, '$1=$1*$2 ');
                            code = code.replace(/([a-zA-Z]*[0-9]*\s*)\/\=(\s*[a-zA-Z]*[0-9]*)/g, '$1=$1/$2 ');
                            fengari.load(code)();
                        } catch(err){
                            console.error(err.message);
                            webix.message({type: 'error', text: "load error:"+err.message});
                            return false;
                        }
                        isLoop = true;
                        $$("script_bet_start_stop_button").setValue('STOP');
                        scriptBet(true);
                    });
                }
            });
            $$("auto_bet_start_stop_button").attachEvent("onItemClick", function(){
                let status = $$("auto_bet_start_stop_button").getValue();
                if(status == 'STOP') {
                    isLoop = false;
                    $$("auto_bet_start_stop_button").setValue('START');
                } else {
                    $$("auto_bet_start_stop_button").setValue('STOP');
                    autoBet();
                    isLoop = true;
                    stopOnWin = false;
                    stopOnLoss = false;
                }
            });
            $$("manual_bet_amount_min_button").attachEvent("onItemClick", function(){
                $$("manual_bet_amount").setValue(minBetAmount);
            });
            $$("manual_bet_amount_max_button").attachEvent("onItemClick", function(){
                getInfo(function(userinfo){
                    let balance = getBalance(userinfo);
                    $$("manual_bet_amount").setValue(balance);
                });
            });
            $$("manual_bet_amount_half_button").attachEvent("onItemClick", function(){
                let betAmount = $$("manual_bet_amount").getValue()/2;
                $$("manual_bet_amount").setValue(Math.max(minBetAmount, betAmount).toFixed(8));
            });
            $$("manual_bet_amount_double_button").attachEvent("onItemClick", function(){
                getInfo(function(userinfo){
                    let balance = getBalance(userinfo);
                    let currencyValue = $$("bet_currency_selection").getValue() -1;
                    let betAmount = $$("manual_bet_amount").getValue()*2;
                    $$("manual_bet_amount").setValue(Math.min(balance, betAmount).toFixed(8));
                });
            });
            $$("auto_bet_stop_on_next_win_button").attachEvent("onItemClick", function(){
                stopOnWin = true;
            });
            $$("auto_bet_stop_on_next_loss_button").attachEvent("onItemClick", function(){
                stopOnLoss = true;
            });
            $$("script_bet_stop_on_next_win_button").attachEvent("onItemClick", function(){
                stopOnWin = true;
            });
            $$("script_bet_stop_on_next_loss_button").attachEvent("onItemClick", function(){
                stopOnLoss = true;
            });
            $$("switch_site_button").attachEvent("onItemClick", function(id, e){
                let box = webix.confirm({
                    title:"CONFIRMATION",
                    ok:"Yes",
                    cancel:"No",
                    text:"Logout/Switch Site will reset current session. Sure?",
                    callback:function(result){
                        if(result) {
                            let domain = document.domain;
                            window.location.href = '../login';
                        }
                    }
                });
            });
            $$("manual_bet_low_button").attachEvent("onItemClick", function(){
                isLoop = false;
                var currency = $$("bet_currency_selection").getText().toLowerCase();
                var payIn = $$("manual_bet_amount").getValue();
                var chance = $$("manual_bet_chance").getValue();
                bet(currency, 0, parseInt(payIn*100000000), chance);
            });
            $$("manual_bet_high_button").attachEvent("onItemClick", function(){
                isLoop = false;
                var currency = $$("bet_currency_selection").getText().toLowerCase();
                var payIn = $$("manual_bet_amount").getValue();
                var chance = $$("manual_bet_chance").getValue();
                bet(currency, 1, parseInt(payIn*100000000), chance);
            });
            $$("bet_currency_selection").attachEvent("onChange", function(newId, oldId){
                refresh(newId);
            });
            $$("reset_session_button").attachEvent("onItemClick", function(){
                webix.confirm({
                    title:"CONFIRMATION",
                    ok:"Yes",
                    cancel:"No",
                    text:"Reset current session. Sure?",
                    callback:function(result){
                        if(result){
                            let currencyValue = $$("bet_currency_selection").getValue();
                            refresh(currencyValue);
                        }
                    }
                });
            });
            $$("script_bet_strategy_list").attachEvent("onChange", function(newId, oldId){
                if(newId && typeof newId !== 'object'){
                    loadScriptContent(newId);
                }
            });
            webix.ready(function(){
                init();
                refresh(1);
                loadScript();
            });
            function loadScriptContent(filename) {
                webix.ajax().get('file?file='+filename).then(function (result) {
                    let ret = result.json();
                    $$("script_bet_coding_board").setValue(ret);
                }).fail(function (xhr) {
                    console.error(response.error.message);
                    webix.message({type: 'error', text: response.error.message});
                });
            }
            function loadScript(filename){
                $$("script_bet_strategy_list").disable();
                $$("bet_chart").showProgress({
                    type:"icon",
                    delay:3000
                });
                if(webix.env.touch) {
                    mobiles.forEach(function(element) {
                        $$(element).showProgress({
                            type:"icon",
                            delay:3000
                        });
                    });
                }
                webix.ajax().get('script').then(function (result) {
                    let ret = result.json();
                    $$("script_bet_strategy_list").define("options", ret);
                    if(typeof filename !== "undefined"){
                        $$("script_bet_strategy_list").setValue(filename);
                        loadScriptContent(filename);
                    } else {
                        $$("script_bet_strategy_list").setValue(ret[0]);
                        loadScriptContent(ret[0].id);
                    }
                    $$("script_bet_strategy_list").enable();
                    $$("script_bet_strategy_list").refresh();
                    $$("bet_chart").hideProgress();
                    if(webix.env.touch) {
                        mobiles.forEach(function(element) {
                            $$(element).hideProgress();
                        });
                    }
                }).fail(function (xhr) {
                    console.error(response.error.message);
                    webix.message({type: 'error', text: response.error.message});
                });
            }
            function saveScript(filename){
                if(filename == '' ){
                    filename = 'Untitled.lua';
                }
                $$('script_code').hide();
                let str = $$("script_bet_coding_board").getValue();
                if(str.trim()===""){
                    webix.message({type: 'error', text: 'script is empty! '});
                } else {
                    webix.ajax().post('save', { scriptStr:str, fileName: filename }).then(function (result) {
                        let ret = result.json();
                        if(ret == 'ok') {
                            loadScript(filename);
                            webix.message({type: 'ok', text: 'save script success'});
                        }
                    }).fail(function (xhr) {
                        console.error(response.error.message);
                        webix.message({type: 'error', text: response.error.message});
                    });
                }
            }
            function delScript(filename){
                webix.ajax().get('del?file='+filename).then(function (result) {
                    let ret = result.json();
                    if (ret == 'ok') {
                        loadScript();
                    }
                }).fail(function (xhr) {
                    console.error(response.error.message);
                    webix.message({type: 'error', text: response.error.message});
                });
            }
            function autoBet(iswin, previousbet){
                let nums =  $$("auto_bet_number_of_bets").getValue();
                let currency = $$("bet_currency_selection").getText().toLowerCase();
                let base = $$("auto_bet_base_amount").getValue();
                let chance = $$("auto_bet_base_chance").getValue();
                let lowHigh = $$("auto_bet_start_low_high").getValue() == 'LOW' ?0:1;
                let autoLossRadio = $$("auto_bet_amount_radio_on_loss").getValue();
                let autoWinRadio = $$("auto_bet_amount_radio_on_win").getValue();
                if(iswin == true && autoWinRadio == 'MULTIPLIER'){
                    let multiWin = $$("auto_bet_amount_radio_on_win_multiplier").getValue();
                    base = previousbet * multiWin;
                    //console.log('win'+multiWin);
                } else if(iswin == false && autoLossRadio == 'MULTIPLIER') {
                    let multiLoss = $$("auto_bet_amount_radio_on_loss_multiplier").getValue();
                    base = previousbet * multiLoss;
                    //console.log('loss'+multiLoss);
                }
                //console.log(lowHigh,base,nums,currency,chance);
                bet(currency, lowHigh, Math.round(parseFloat(base*100000000)), chance);
            }
            function scriptBet(init){
                try{
                    let nextbet = fengari.load('return nextbet')();
                    let previousbet = fengari.load('return previousbet')();
                    let chance = fengari.load('return chance')();
                    let currency = $$("bet_currency_selection").getText().toLowerCase();
                    let lowHigh = fengari.load('return bethigh')() == false ?0:1;
                    if(init){
                        fengari.load('nextbet=basebet')();
                        nextbet = fengari.load('return basebet')();
                        fengari.load('previousbet=basebet\ncurrentprofit=0\ncurrentstreak=0\nwins=0\nlosses=0\nbets=0\nisloop=true\nprofit=0\ncurrentroll=0\n')();
                        fengari.load('function stop()\nisloop = false \n print(isloop)\nend')();
                    } else {
                        fengari.load('dobet()')();
                        nextbet = fengari.load('return nextbet')();
                        chance = fengari.load('return chance')();
                        lowHigh = fengari.load('return bethigh')() == false ?0:1;
                    }
                    fengari.load('previousbet=nextbet')();
                    fengari.load('print("script",basebet,nextbet,previousbet,chance,win,currentprofit,currentstreak,wins,losses,bets,bethigh,isloop,profit,currentroll)')();
                    betScript(currency, lowHigh, Math.round(parseFloat(nextbet*100000000)), chance);
                }catch(err){
                    console.error(err);
                    $$("script_bet_start_stop_button").setValue('START');
                    webix.message({type: 'error', text:"script error:"+ err});
                }
            }
            function action(c,h,p,ch,cv,cb){
                let houseEdgeValue = $$("bet_house_edge_selection").getValue();
                webix.ajax().post('bet', { Currency:c, PayIn:p, High:h, Chance:ch, CurrencyValue: cv, HouseEdge: houseEdgeValue  }).then(function (result) {
                    let ret = result.json();
                    cb(ret);
                }).fail(function (xhr) {
                    var response = JSON.parse(xhr.response);
                    $$("auto_bet_start_stop_button").setValue('START');
                    console.error(response.error.message);
                    webix.message({type: 'error', text: response.error.message});
                });
            }

            function checkerr(mess){
                let result = webix.ajax().sync().get('checkerr?mess='+mess+'&count='+errCount ); 
                let ret = JSON.parse(result.responseText);
                errCount = ret.count;
                if(mess != '' && typeof mess !== 'undefined') {
                    console.error(mess);
                    webix.message({type: 'error', text: mess });
                }
                return ret.ret;
            }
            
            function bet(c,h,p,ch) {
                if(!checkParams(p,ch)) {
                    $$("auto_bet_start_stop_button").setValue('START');
                    console.error('Please enter the correct parameters');
                    webix.message({type: 'error', text: 'Please enter the correct parameters'});
                    return false;
                }
                let iswin = false;
                $$("bet_chart").showProgress({
                    type:"icon",
                    delay:3000
                });
                if(webix.env.touch) {
                    mobiles.forEach(function(element) {
                        $$(element).showProgress({
                            type:"icon",
                            delay:3000
                        });
                    });
                }
                let currencyValue = $$("bet_currency_selection").getValue() -1;
                let currentAmount =  p/100000000;
                action(c,h,p,ch,currencyValue,function(ret) {
                    //console.log(ret);
                    try{
                    if(isError(ret)) {
                            iswin = getWinStatus(ret);
                            setStreak(iswin, currentAmount);
                            setChart(ret, count, currencyValue);
                            setDatatable(ret, iswin);
                            setStats(ret.info, currencyValue);
                            count++
                    } else {
                        isLoop = outError(ret);
                    }
                    $$("bet_chart").hideProgress();
                    if(webix.env.touch) {
                        mobiles.forEach(function(element) {
                            $$(element).hideProgress();
                        });
                    }
                    //console.log(isLoop, stopOnWin, stopOnLoss, iswin);
                    if (stopOnWin == true && iswin) {
                        //console.log("stop on win");
                        isLoop = false;
                    }
                    if (stopOnLoss == true && !iswin) {
                        //console.log("stop on loss");
                        isLoop = false;
                    }
                    if (isLoop) {
                        let currentRoll = getCurrentRoll(ret);
                        let rollMin = $$("auto_bet_roll_min").getValue();
                        let rollMax = $$("auto_bet_roll_max").getValue();
                        if(currentRoll <= rollMax && currentRoll >= rollMin){
                            //console.log("currentRoll stop");
                            isLoop = false;
                        }
                        let actProfit = getActProfit(ret.info, currencyValue);
                        let stopProfit = $$("auto_bet_stop_on_profit").getValue()*100000000;
                        if(stopProfit != 0) {
                            if(actProfit>=stopProfit && stopProfit>0){
                                    isLoop = false;
                            }
                            //console.log(actProfit,stopProfit);
                            if(actProfit<=stopProfit && stopProfit<0){
                                //console.log("act profit stop");
                                    isLoop = false;
                            }
                        }
                        let nums =  $$("auto_bet_number_of_bets").getValue();
                        if(nums>0){
                            $$("auto_bet_number_of_bets").setValue(nums-1);
                            if(nums == 1) {
                                isLoop = false;
                            }
                        }
                        let lossNums =  $$("auto_bet_stop_on_loss").getValue();
                        if(lossNums>0 && !iswin){
                            $$("auto_bet_stop_on_loss").setValue(lossNums-1);
                            if(lossNums == 1) {
                                isLoop = false;
                            }
                        }
                        let winNums =  $$("auto_bet_stop_on_win").getValue();
                        if(winNums>0 && iswin){
                            $$("auto_bet_stop_on_win").setValue(winNums-1);
                            if(winNums == 1) {
                                isLoop = false;
                            }
                        }
                        if(isLoop){
                            autoBet(iswin,(p/100000000).toFixed(8));
                        } else {
                            $$("auto_bet_start_stop_button").setValue('START');
                        }
                    } else {
                        $$("auto_bet_start_stop_button").setValue('START');
                    }
                    } catch(err){
                        $$("auto_bet_start_stop_button").setValue('START');
                        console.error(err.message);
                        webix.message({type: 'error', text: err.message});
                    }
                });
            }
            let count = 1;
            let errCount = 1;
            function betScript(c,h,p,ch) {
                if(!checkParams(p,ch)) {
                    $$("script_bet_start_stop_button").setValue('START');
                    console.error('Please enter the correct parameters');
                    webix.message({type: 'error', text: 'Please enter the correct parameters'});
                    return false;
                }
                let iswin = false;
                if(isLoop){
                    isLoop = fengari.load('return isloop')();
                    if(!isLoop){
                        $$("script_bet_start_stop_button").setValue('START');
                        return false;
                    }
                }
                $$("bet_chart").showProgress({
                    type:"icon",
                    delay:3000
                });
                if(webix.env.touch) {
                    mobiles.forEach(function(element) {
                        $$(element).showProgress({
                            type:"icon",
                            delay:3000
                        });
                    });
                }
                let currencyValue = $$("bet_currency_selection").getValue() -1;
                let currentAmount =  p/100000000;
                action(c,h,p,ch,currencyValue,function(ret) {
                    if(isError(ret)) {
                        try {
                            iswin = getWinStatus(ret);
                            setStreak(iswin, currentAmount);
                            setBetToLua(ret, currencyValue);
                            setChart(ret, count, currencyValue);
                            setDatatable(ret, iswin);
                            setStats(ret.info, currencyValue);
                        } catch(err){
                            console.error(err.message);
                            webix.message({type: 'error', text: err.message});
                        }
                        count++;
                    } else {
                        isLoop = outError(ret);
                    }
                    $$("bet_chart").hideProgress();
                    if(webix.env.touch) {
                        mobiles.forEach(function(element) {
                            $$(element).hideProgress();
                        });
                    }
                    //console.log(isLoop, stopOnWin, stopOnLoss, iswin);
                    if (stopOnWin == true && iswin) {
                        //console.log("stop on win");
                        isLoop = false;
                    }
                    if (stopOnLoss == true && !iswin) {
                        //console.log("stop on loss");
                        isLoop = false;
                    }
                    if (isLoop) {
                        scriptBet(false);
                    } else {
                        $$("script_bet_start_stop_button").setValue('START');
                    }
                });
            }
            function clearSession(){
                $$('bet_current_stats2').setValues({
                    bet_current_stats_current_streak:0,
                    bet_current_stats_max_win_streak:0,
                    bet_current_stats_max_loss_streak:0,
                    bet_current_stats_max_win_streak_amount:0,
                    bet_current_stats_max_loss_streak_amount:0,
                    bet_current_stats_max_bet_amount:0,
                });
                $$('bet_datatable').clearAll();
                $$("bet_chart").clearAll();
                $$("script_bet_log_board").clearAll();
                maxStreakAmount = 0;
                minStreakAmount = 0;
                stopOnWin = false;
                stopOnLoss = false;
            }
            function refresh(newId) {
                clear(function(userinfo){
                    setStats(userinfo, newId-1);
                    $$('bet_datatable').clearAll();
                    $$("bet_chart").clearAll();
                    clearSession();
                });
            }
            function clear(cb){
                $$("bet_chart").showProgress({
                    type:"icon",
                    delay:3000
                });
                if(webix.env.touch) {
                    mobiles.forEach(function(element) {
                        $$(element).showProgress({
                            type:"icon",
                            delay:3000
                        });
                    });
                }
                webix.ajax().get('clear?currency='+$$("bet_currency_selection").getText().toLowerCase()).then(function (result) {
                    let ret = result.json();
                    //console.log(ret);
                    $$("bet_chart").hideProgress();
                    if(webix.env.touch) {
                        mobiles.forEach(function(element) {
                            $$(element).hideProgress();
                        });
                    }
                    cb(ret);
                });
            }
            function getInfo(cb){
                $$("bet_chart").showProgress({
                    type:"icon",
                    delay:3000
                });
                if(webix.env.touch) {
                    mobiles.forEach(function(element) {
                        $$(element).showProgress({
                            type:"icon",
                            delay:3000
                        });
                    });
                }
                webix.ajax().get('refresh?currency='+$$("bet_currency_selection").getText().toLowerCase()).then(function (result) {
                    let ret = result.json();
                    $$("bet_chart").hideProgress();
                    if(webix.env.touch) {
                        mobiles.forEach(function(element) {
                            $$(element).hideProgress();
                        });
                    }
                    cb(ret);
                });
            }
            function setStreak(win, currentAmount){
                let currentStreak = $$('bet_current_stats2').getValues().bet_current_stats_current_streak;
                let maxWinStreak = $$('bet_current_stats2').getValues().bet_current_stats_max_win_streak;
                let maxLossStreak = $$('bet_current_stats2').getValues().bet_current_stats_max_loss_streak;
                let maxWinStreakAmount = $$('bet_current_stats2').getValues().bet_current_stats_max_win_streak_amount;
                let maxLossStreakAmount = $$('bet_current_stats2').getValues().bet_current_stats_max_loss_streak_amount;
                let maxBetAmount = $$('bet_current_stats2').getValues().bet_current_stats_max_bet_amount;
                if(currentAmount>maxBetAmount){
                    maxBetAmount = currentAmount.toFixed(8);
                }
                if(win){
                    maxStreakAmount = maxStreakAmount + currentAmount;
                    if(currentStreak>=0) {
                        currentStreak++;
                        if(maxWinStreakAmount<=maxStreakAmount){
                            maxWinStreakAmount = maxStreakAmount.toFixed(8) ;
                        }
                    } else {
                        currentStreak = 1;
                        if(maxLossStreakAmount>=minStreakAmount){
                            maxLossStreakAmount = minStreakAmount.toFixed(8) ;
                        }
                        minStreakAmount = 0;
                    } 
                    if(maxWinStreak<currentStreak){
                        maxWinStreak = currentStreak;
                    }
                    console.log('win:');
                    console.log('maxLossStreakAmount:'+maxLossStreakAmount);
                    console.log('maxWinStreakAmount:'+maxWinStreakAmount);
                    console.log('maxStreakAmount:'+maxStreakAmount);
                    console.log('minStreakAmount:'+minStreakAmount);
                } else {
                    minStreakAmount = minStreakAmount - currentAmount;
                    if(currentStreak<0) {
                        currentStreak--;
                        if(maxLossStreakAmount>=minStreakAmount){
                            maxLossStreakAmount = minStreakAmount.toFixed(8) ;
                        }
                    } else {
                        currentStreak = -1;
                        if(maxWinStreakAmount<=maxStreakAmount){
                            maxWinStreakAmount = maxStreakAmount.toFixed(8) ;
                        }
                        maxStreakAmount = 0;
                    } 
                    if(maxLossStreak>currentStreak){
                        maxLossStreak = currentStreak;
                    }
                    console.log('loss:');
                    console.log('maxLossStreakAmount:'+maxLossStreakAmount);
                    console.log('maxWinStreakAmount:'+maxWinStreakAmount);
                    console.log('maxStreakAmount:'+maxStreakAmount);
                    console.log('minStreakAmount:'+minStreakAmount);
                }
                $$('bet_current_stats2').setValues({
                    bet_current_stats_current_streak:currentStreak,
                    bet_current_stats_max_win_streak:maxWinStreak,
                    bet_current_stats_max_loss_streak:maxLossStreak,
                    bet_current_stats_max_win_streak_amount:maxWinStreakAmount,
                    bet_current_stats_max_loss_streak_amount:maxLossStreakAmount,
                    bet_current_stats_max_bet_amount:maxBetAmount,
                });
            }
            function setBetToLua(ret, currencyValue){
                let currentStreak = $$('bet_current_stats2').getValues().bet_current_stats_current_streak;
                let profit = (getActProfit(ret.info,currencyValue)/100000000).toFixed(8)
                let balance = getBalance(ret.info)
                if(getWinStatus(ret)){
                    fengari.load('wins=wins+1\ncurrentstreak='+currentStreak+'\n')()
                } else {
                    fengari.load('losses=losses+1\ncurrentstreak='+currentStreak+'\n')()
                }
                fengari.load('win='+ getWinStatus(ret) +'\nbets=bets+1\ncurrentprofit='+getCurrProfit(ret)+'\ncurrentroll='+getCurrentRoll(ret)+'\nprofit='+profit+'\nbalance='+balance+'\n')()
            }
            
            function setChart(ret, count, currencyValue){
                let profit = (getActProfit(ret.info,currencyValue)/100000000).toFixed(8)
                $$("bet_chart").add({xValue: count, yValue: profit});
            }
            //print to html
            let format = webix.Date.dateToStr("%H:%i:%s");
            (function () {
                let orig = console.log;
                console.log = function (message) {
                    if (typeof message == 'object') {
                    //webix.message(JSON.stringify( message));
                        $$("script_bet_log_board").add({
                            title:'<font size="3" color="green">'+format(new Date())+' '+(JSON && JSON.stringify ? JSON.stringify(message) : message)+'</font>' 
                        },0)
                    } else {
                        $$("script_bet_log_board").add({
                            title:'<font size="3" color="green">'+format(new Date())+' '+message+'</font>' 
                        },0)
                    }
                    orig.apply(console, arguments);
                }
            })();
            (function () {
                let orig = console.error;
                console.error = function (message) {
                    if (typeof message == 'object') {
                        $$("script_bet_log_board").add({
                            title:'<font size="3" color="red">'+format(new Date())+' '+(JSON && JSON.stringify ? JSON.stringify(message) : message)+'</font>' 
                        },0)
                    } else {
                        $$("script_bet_log_board").add({
                            title:'<font size="3" color="red">'+format(new Date())+' '+message+'</font>' 
                        },0)
                    }
                    orig.apply(console, arguments);
                }
            })();
            function focusFunction() {
                if(webix.env.touch) {
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.hide();
                }
            }
            function onblurFunction() {
                if(webix.env.touch) {
                    let layout = $$("mobile_toolbar").getParentView();
                    layout.show();
                }
            }
    script(src=site)
